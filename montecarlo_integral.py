# -*- coding: utf-8 -*-
"""MonteCarlo Integral

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/163Is96ByH9KcH1RxN2NqaMqRjWI3WdTC
"""

import random

# f(x) = 2x + 1
# integral f(x) dx = x^2 + x
# buat cek hasil => 1/3 *1^3 + 1/2 *1^2 = 1/3 + 1/2 = 0,333 + 0,5 = 0,833

def sebenarnya(atas,bawah):
  hatas = (1/3 * atas**3) + ( 1/2 * atas**2)
  hbawah = (1/3 * bawah**3) + ( 1/2 * bawah**2)
  return hatas-hbawah

def fungsi(x):
  return ((x*x) + x)

def xirandom(M):
  xi = []
  for i in range(M):
    xi.append(random.random())
  return xi

def hasilfxi(xi):
  fxi = []
  for i in range(len(xi)):
    fxi.append(fungsi(xi[i]))
  return fxi

def metodequadrature(wi, fxi):
  sum = 0
  ikecil = []
  for i in range(len(fxi)):
    wfx = wi * fxi[i]
    sum = sum + wfx
    ikecil.append(wfx)
  return sum,ikecil

M = 100
a = 0
b = 1
# partisi rectangular 
wi = (b-a)/M

ibenar = sebenarnya(b,a)

xi = xirandom(M)
fxi = hasilfxi(xi)
total,ikecil = metodequadrature(wi, fxi)

print("Nilai a      =",a)
print("Nilai b      =",b)
print("Banyak M     =", M)
print("I estimasi   =", total)
print("I sebenarnya =", ibenar)

